n
n=50
x.star <- sapply(1:B1, function(i) sample(x[,1],n,replace=TRUE))
dim(x.star)
any(apply(x.star,2,sum)==0)
which(apply(x.star,2,sum)==0)
example(dparetotol.int)
seq(-234,988,length=2)
seq(-234,988,length=3)
x=rnorm(5)
mean(sapply(1:5,function(i) mean(x[-i])))
mean(x)
sapply(1:5,function(i) mean(x[-i]))
mean(sapply(1:5,function(i) sd(x[-i])))
sd)x
sd(x)
30*24
length(seq(.1,.9,by=.01))
90/24
3600/500
library(tolerance)
dparetotol.int
dpareto.ll
qdpareto
?truncate
trunc
?trunc
truncate(1.4)
trunc(1.4)
trunc(-1.4)
trunc(-.4)
detectCores()
library(ACSWR)
data(nerve)
length(nerve)
library(tolerance)
?normtol.int
normtol.int
371.01+537+84+750+66
library(boot)
library(bootstrap)
help(package="bootstrap")
c(rnorm(80),rnorm(10,-100),rnorm(10,100))
x=c(rnorm(80),rnorm(10,-100),rnorm(10,100))
hist(x)
mean(x)
c(rnorm(80),rnorm(10,-100),rnorm(10,100000))
x=c(rnorm(80),rnorm(10,-100),rnorm(10,100000))
hist(x)
mean(x)
mean(x,trim=.05)
mean(x,trim=.1)
data(quake)
data(quakes)
(xy <- cbind(x = 1:10, y = c(1:3, 8:5, 8:10)))#
 w1 <- c(0,0,0,1,1,1,1,1,0,0)#
 cov.wt(xy, wt = w1) # i.e. method = "unbiased"#
 cov.wt(xy, wt = w1, method = "ML", cor = TRUE)
cov.wt
xy
?mean
apply(xy,2,weighted.mean,w=w1)
w2=w1
w2
w2[2]=3
cov.wt(xy, wt = w1, method = "ML", cor = TRUE)
cov.wt(xy, wt = w2, method = "ML", cor = TRUE)
calcW <- function(x, y) {#
  w3 <- y#
  w2 <- x - w3/2#
  w1 <- 1 - w2 - w3#
  return(c(w1, w2, w3))#
}#
#
## Perspective plot -- unbiased estimate of variance#
res <- 37#
x <- y <- seq(0, 1, len=res)#
Z <- matrix(NA, nrow=res, ncol=res)#
for (i in 1:res) {#
  for (j in 1:res) {#
    w <- calcW(x[i], y[j])#
    if (any(w < 0 | w > 1)) Z[i,j] <- 0#
    else Z[i,j] <- cov.wt(matrix(c(1,3,2),ncol=1), wt=w)$cov#
  }#
}#
pobj <- persp(x, y, Z, box=FALSE, theta=150, axes=FALSE, lwd=0.5, phi=25, d=5, border="blue")#
points(trans3d(0.5,1,0.52,pmat=pobj),pch=19)#
text(trans3d(0.5,1,0.52,pmat=pobj)$x+.03,trans3d(0.5,1,0.52,pmat=pobj)$y,labels="2")#
points(trans3d(0,0,0.52,pmat=pobj),pch=19)#
text(trans3d(0,0,0.52,pmat=pobj)$x+.03,trans3d(0,0,0.52,pmat=pobj)$y,labels="3")#
points(trans3d(1,0,0.52,pmat=pobj),pch=19)#
text(trans3d(1,0,0.52,pmat=pobj)$x-.03,trans3d(1,0,0.52,pmat=pobj)$y,labels="1")#
points(trans3d(0.5,1/3,var(1:3),pmat=pobj),pch=19)#
text(trans3d(0.5, 1/3, var(1:3), pmat=pobj)$x-.03, trans3d(0.5, 1/3, var(1:3), pmat=pobj)$y,labels=expression(hat(w)))#
Z[is.nan(Z)] <- 0#
x1 <- x; y1 <- y; Z1 <- Z
library(tolerance)
dparetotol.int
normtol.int
x=c(rep(3,525),rep(4,209),rep(5,94),rep(6,41),rep(7,34),rep(8,15),rep(9,22),rep(10,5),rep(11,2),rep(12,4),13,14,16,17,19,20,39)
hist(x)
dpareto.ll(x)
hist(x,prob=T)
y=0:40
lines(y,ddpareto(x,theta=.5505158))
lines(y,ddpareto(y,theta=.5505158),col=2)
ddpareto(0,.5505158)
ddpareto(1,.5505158)
ddpareto(2,.5505158)
ddpareto(3,.5505158)
dpareto.ll(x-3)
hist(x-3,prob=T)
lines(y,ddpareto(y,theta=.2483292),col=2)
dparetotol.int(x-3,alpha=0.05,side=1)
all.theta=seq(.1,.9,by=.01)
length(all.theta)
all.theta[63]
all.theta[64]
#Road Accident Blackspots Data#
x <- c(rep(3,438),rep(4,173),rep(5,71),rep(6,38),rep(7,23),rep(8,9),rep(9,8),rep(10,6),11,rep(12,3),13,13,14,14,15,15,19,20,27,49)#
x.star <- x-3#
y <- table(x)#
th.hat <- as.numeric(dparetotol.int(x.star))[3]#
#ctpts <- c(0,seq(3,36,by=4),Inf)#
ctpts <- c(0,seq(3,32,by=4),Inf)#
obs <- as.numeric(table(cut(x.star,breaks=ctpts,include.lowest=T)))#
fit <- c(pdpareto(ctpts[2],th.hat),sapply(1:(length(ctpts)-3),function(i) sum(ddpareto((ctpts[(i+1)]+1):ctpts[(i+2)],th.hat))),1-pdpareto(tail(ctpts,2)[1],th.hat))#
round(fit*length(x),2)#
chisq.test(x=obs,p=fit)#
#
plot(as.numeric(names(y)),as.numeric(c(y)),type="h",ylim=c(0,500),lwd=10,col="gray",xlab="Counts",ylab="Frequency",#
     main="Accident Blackspots",cex.main=2,cex.lab=1.4,cex.axis=1.4)#
points(3:49,length(x)*ddpareto(0:46,theta=th.hat),col=1,pch=8)#
legend("topright",pch=8,legend=c("Expected"),bty="n",cex=1.2)
plot(as.numeric(names(y)),as.numeric(c(y)),type="h",ylim=c(0,500),lwd=6,col="gray",xlab="Counts",ylab="Frequency",#
     main="Accident Blackspots",cex.main=2,cex.lab=1.4,cex.axis=1.4)#
points(3:49,length(x)*ddpareto(0:46,theta=th.hat),col=1,pch=8,cex=.7)#
legend("topright",pch=8,legend=c("Expected"),bty="n",cex=1.2)
# Cysts in mice kidneys.#
x=c(rep(0,65),rep(1,14),rep(2,10),rep(3,6),rep(4,4),rep(5,2),rep(6,2),rep(7,2),8:10,11,11,19)#
#
th.hat <- as.numeric(dparetotol.int(x))[3]#
dpareto.ll(x)#
y <- table(x)#
plot(as.numeric(names(y)),as.numeric(c(y)),type="h",ylim=c(0,70),lwd=6,col="gray",xlab="Counts",ylab="Frequency",#
     main="Cysts in Mice Kidneys",cex.main=2,cex.lab=1.4,cex.axis=1.4)#
points(0:20,length(x)*ddpareto(0:20,theta=th.hat),col=1,pch=8,cex=.7)#
legend("topright",pch=8,legend=c("Expected"),bty="n",cex=1.2)
a
log(30)
log(5)^6
log(5^6)
5*log(6)
log(6^5)
library(lme4)
?lmer
fm1 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
fm1
fm1 <- lmer(Reaction ~ 1 | Subject, sleepstudy)
fm1
summary(fm1)
fm2 <- lmer(Reaction ~ Days + (Days | Subject), sleepstudy)
summary(fm2)
sleepstudy[1:10,]
?regmixEM.mixed
library(mixtools)
?regmixEM.mixed
x=rnorm(1000,100,2)
hist(x)
var(x)/1000
mu.hat=mean(x)
sigma2.hat=var(x)
sigma2.hat
mu.hat
n=1000;B=10000
x.star = matrix(n*B,ncol=B)
dim(x.star)
x.star = matrix(rnorm(n*B,mean=mu.hat,sd=sqrt(sigma2.hat)),ncol=B)
dim(x.star)
theta.star = apply(x.star,2,mean)
hist(theta.star)
var(theta.star)
x=rnorm(50,100,2)
var(x)/50
plot(0,0)
lines(1,3)
lines(0,2)
lines(c(0,0),c(.1,.2))
library(tolerance)
x=c(rep(0,64),rep(1,17),rep(2,10),rep(3,6),rep(4,3))
dparetotol.int
dpareto.ll(x)
y=1:10
var(y)
mean((y-mean(y))^2)
mean((y-mean(y))^2)*10/9
normalmixEM
library(mixtools)
normalmixEM
regmixEM
?density
d <- density(faithful$eruptions, bw = "sj")#
d#
plot(d)
d <- density(faithful$eruptions, bw = 3)#
d#
plot(d)
example(dw.test)
library(bstats)
472-315
log(1/6)
log(6)
sd(1:2)
mean((c(1:2)-.5)^2)
mean((c(1:2)-.5)^2)*.5
sqrt(mean((c(1:2)-.5)^2))
sqrt(mean((c(1:2)-1.5)^2))
var(1:2)
sd(1:2)
sqrt(.5)
x=rnorm(10)
sqrt(mean((x-mean(x))^2))
sd(x)
?sd
sqrt(mean((x-mean(x))^2)*10/9)
cbind(1:5,c(1,1,6,9,2))
df=cbind(1:5,c(1,1,6,9,2))
cor(df)
cor(df,method="kendall")
cor(df,method="spearman")
cor.test(df,method="kendall")
cor.test(df[,1],df[,2])
cor.test(df[,1],df[,2],method="kendall")
cor.test(df[,1],df[,2],method="spearman")
library(mixtools)
gammamixEM
x=rgamma(10000,.01,.4)
range(x)
x=rgamma(10000,.01,.0004)
range(x)
sum(dgamma(x,.01,004))
dgamma(0,.01,.004)
dgamma(9000,.01,.004)
log(dgamma(0,.01,.004))
log(dgamma(-0,.01,.004))
log(dgamma(-0.1,.01,.004))
sum(log(dgamma(x,.01,004)))
dgamma(x,.01,004)
range(dgamma(x,.01,004))
log(0)
-Inf+Inf
log(Inf)
library(mixtools)
help(package="mixtools")
data(Waterdata)
class(Waterdata)
help(package="mixtools")
data(Waterdatafull)
data(WaterdataFull)
dim(Waterdata)
Waterdata
load("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/Habituationdata.RData")
ls()
WaterdataFull
Habituationdata
qnorm(.9)
1-pnorm(qnorm(.9))
1-pnorm(qnorm(.9)-4)
pnorm(qnorm(.9)+4)
1/(4*sqrt(pi))
sqrt(12)/(4*sqrt(pi))
sqrt(12)/(2*sqrt(pi))
sqrt(12)/(4*sqrt(pi))
3/pi
library(depth)
?depth
library(coin)
?wilcox_test
39+39+39+27.75+57.5+27.75
56.25+56.25*3+25
250*20
230*65
load("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/Waterdata.RData")
dim(Waterdata)
dim(WaterdataFull)
ls()
rm(Waterdata)
ls()
getwd()
setwd("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/")
ls()
save("WaterdataFull.RData")
save(WaterdataFull,"WaterdataFull.RData")
?save
ls()
dim(WaterdataFull)
save(WaterdataFull,file="WaterdataFull.RData")
load("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/Waterdata.RData")
ls()
rm(WaterdataFull)
save(Waterdata,file="Waterdata.RData")
rm(list=ls())
ls)()
ls()
load("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/Waterdata.RData")
ls()
dim(Waterdata)
rm(list=ls())
ls()
load("/Users/derekyoung/myrpackages/mixtoolsrepo/mixtools/data/WaterdataFull.RData")
ls()
dim(WaterdataFull)
